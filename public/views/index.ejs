<!DOCTYPE html>
<html>
<head>
  <title>Shopping Cart</title>
  <link rel="stylesheet" type="text/css" href="../css/style.css">
  <script type="text/javascript" src="../js/lib/jquery-1.11.0.min.js"></script>
  <script type="text/javascript" src="../js/lib/angular.min.js"></script>
  <script type="text/javascript" src="../js/invoice.js"></script>
  
  <script>
    var query;
    var tooltip;

//*************************************************************************************************
//******************** CONSTRUCTOR PATTERN IMPLEMENTATION *****************************************
//*************************************************************************************************

    function Laptop(model) {
      this.model = model
    };

    var laptop = new Laptop("Macbook Pro");

//*************************************************************************************************
//*************************************************************************************************
//*************************************************************************************************

    function showQuotes() {
      
      query = $.ajax({
        url: '/showMyQuotes',
        async: false
      }).done(function(data) {
        return data;
      });

      if(query.responseJSON === undefined) {
        document.write("AJAX call not successful");
      } else{
        $('#myQuotesList').html("");


        for(var i=0; i < query.responseJSON.length; i++) {
          
//*************************************************************************************************
//***************************** DECORATOR PATTERN IMPLEMENTATION **********************************
//*************************************************************************************************        

// As I understand it, the decorator pattern is useful for when instances of an object may 
// need certain properties and methods on particular occasions, but different properties/methods
// on others.  Instead of creating different classes for objects that have different properties/methods,
// the decorator pattern allows us to tack them on as we need.
// In my implementation, the decorator pattern wasn't really appropriate, since every laptop quote
// will always have screen size, hard drive, and ram values set, but in case there were some
// features that were optional, this is how the decorator pattern would be used to add these optional features.
            
            if(query.responseJSON[i].screenCost == "200") {
              laptop.screenSize = "15 inches"; 
              laptop.getScreenSize = function() { return this.screenSize; }
            } else {
              laptop.screenSize = "11 inches";
              laptop.getScreenSize = function() { return this.screenSize; }
            }
              
            if(query.responseJSON[i].hardDriveCost === "200") {
              laptop.hardDrive = "256GB";
              laptop.getHardDrive = function() { return this.hardDrive; } 
            } else {
              laptop.hardDrive = "128GB";
              laptop.getHardDrive = function() { return this.hardDrive; }
            }

            if(query.responseJSON[i].ramCost === "200") {
              laptop.ram = "16GB";
              laptop.getRam = function() { return this.ram; }
            } else {
              laptop.ram = "8GB";
              laptop.getRam = function() { return this.ram; } 
            }
          
//************************************************************************************************
//************************************************************************************************
//************************************************************************************************          
             
 
          $('#myQuotesList').append(
            '<div class="quoteItem" title="' + laptop.getScreenSize() + '">' + 'Laptop Quote ' + (i + 1)
              + '<ul style="margin-top:0; font-size:80%">'
                + '<li>Laptop Cost: ' + query.responseJSON[i].laptopCost + '</li>'
                + '<li>Screen Cost: ' + query.responseJSON[i].screenCost + '</li>'
                + '<li>Hard Drive Cost: ' + query.responseJSON[i].hardDriveCost + '</li>'
                + '<li>RAM Cost: ' + query.responseJSON[i].ramCost + '</li>'
              + '</ul>'   
              + '<b>Total Cost: </b>' +  query.responseJSON[i].totalCost
            + '</div>'
          );
          

        }
      }
    }
  </script> 
</head>

<body>
  <a href="/unittest">Go to Unit Test >></a>
  <div ng-app="invoice" ng-controller="InvoiceController as invoice">
    <div style="float:left">
      <img width=300 src="../img/laptop.png">

      <div>
        <b>Screen Size</b><br>
        <input type="radio" name="screen_size" value="0" ng-model="invoice.screenPrice" checked>
          11 inches (FREE) <br>
        <input type="radio" name="screen_size" value="200" ng-model="invoice.screenPrice" >
          15 inches (+$200)
      </div>
      <br>
      <div>
        <b>Hard Drive</b><br>
        <input type="radio" name="hard_drive" value="0" ng-model="invoice.hardDrivePrice" checked>
          128GB (FREE) <br>
        <input type="radio" name="hard_drive" value="200" ng-model="invoice.hardDrivePrice" >
          256GB (+$200)
      </div>
      <br>
      <div>
        <b>Memory</b><br>
        <input type="radio" name="ram" value="0" ng-model="invoice.ramPrice" checked>
          8GB (FREE)<br>
        <input type="radio" name="ram" value="200" ng-model="invoice.ramPrice" >
          16GB (+$200)
      </div>
    </div>

    <div id="summaryDiv" style="float:left">
      <h3>Summary</h3><hr>
      <b>Total:</b>
      <span> {{invoice.total() | currency}} </span>
      <br><br>
      <a class="saveButton" href="/save/{{invoice.laptopPrice}}/{{invoice.screenPrice}}/{{invoice.hardDrivePrice}}/{{invoice.ramPrice}}/{{invoice.total().toString()}}" ><div id="saveButton">Save Quote</div></a>

      <br>

      <a class="showMyQuotesButton" href="" onclick="showQuotes();" ><div id="showMyQuotesButton">Show My Quotes</div></a>
      <br>
      <div id="myQuotesList">
        
      </div>
    </div>
    
  </div>

</body>

</html>







